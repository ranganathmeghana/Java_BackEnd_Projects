<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-lazy-init="true">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<context:annotation-config />

	<!-- Aspects -->
	<aop:aspectj-autoproxy />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/web/**" location="/web/" />
	<mvc:resources mapping="/images/**" location="/images/" />

	<context:component-scan base-package="com.infy.acp" />

	<bean id="jacksonObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="jacksonObjectMapper" />
		<property name="targetMethod" value="configure" />
		<property name="arguments">
			<list>
				<value type="com.fasterxml.jackson.databind.DeserializationFeature">FAIL_ON_UNKNOWN_PROPERTIES</value>
				<value>false</value>
			</list>
		</property>
	</bean>

	<!-- Register the message.properties -->
	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:MessageResource</value>
				<value>classpath:ErrorMessages</value>
			</list>
		</property>
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<!-- Dozer -->
	<bean id="mapper" class="org.dozer.DozerBeanMapper">
		<property name="mappingFiles">
			<list>
				<value>dozer-bean-mappings.xml</value>
			</list>
		</property>
	</bean>
	<import resource="classpath:acp-db.xml" />

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<context:annotation-config />

	<!-- Aspects -->
	<aop:aspectj-autoproxy />

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/web/" />
	<mvc:resources mapping="/images/**" location="/images/" />

	<context:component-scan base-package="com.infy.acp.*" />

	<!-- To enable @RequestMapping process on type level and method level -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean id="mappingJacksonHttpMessageConverter"
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="objectMapper">
						<ref bean="jacksonObjectMapper" />
					</property>
				</bean>
			</list>
		</property>
	</bean>


	<!-- jdbc configuration parameters -->
	<context:property-placeholder
		properties-ref="appProperties" ignore-resource-not-found="true" />

	<!-- Properties files -->
	<!-- Utility : Reads application properties based on Environment variable -->
	<bean id="appProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="ignoreResourceNotFound">
			<value>true</value>
		</property>
		<property name="locations">
			<!-- Note the order of the files listed is important. Properties in later 
				files will override earlier ones. -->
			<list>
				<value>classpath:web-config-${acpEnv}.properties</value>
				<value>classpath:config-${acpEnv}.properties</value>
				<value>classpath:web-config.properties</value>
				<value>classpath:mail.properties</value>
			</list>
		</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Configure the multipart resolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="20971520" />
	</bean>

	<!-- Rest Template -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="requestFactory">
			<bean
				class="org.springframework.http.client.CommonsClientHttpRequestFactory" />
		</property>

		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.FormHttpMessageConverter"></bean>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter"></bean>
				<bean
					class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
				<bean
					class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
					<property name="objectMapper" ref="jacksonObjectMapper" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- <bean id="acpExceptionResolver" class="com.infy.acp.exception.ACPExceptionResolver" 
		/> -->
</beans>
